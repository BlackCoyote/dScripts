dpets:
  type: version
  name: dPets
  id: 104
  description: providing highly unique cosmetic-only pets for your server.
  version: 10
#
#
# constructor + script tracker + config
# puts all pet script entries in a little database to avoid searching for them every time it needs to list them
#
#
dpets_constructor:
  debug: false
  type: world
  events:
    on server start:
    - inject locally path:construct_database
    on reload scripts:
    - inject locally path:construct_database
    on writepets command:
    - if <player.is_op.not> queue clear
    - inject locally path:construct_database
    on system time hourly:
    - webget "http://morphanone.space/webizen.aspx/tracker?script=104&version=<s@dpets.yaml_key[version]>"
  construct_database:
  - inject locally path:check_config
  - if <yaml.list.contains[dpets_database]> {
    - yaml id:dpets_database set dpets:!
    } else {
    - yaml create id:dpets_database
    }
  - foreach <server.list_scripts.filter[yaml_key[is_dpet]]||li@>:
    - define pet_ID <def[value].yaml_key[pet_id]||null>
    - if <def[pet_ID]> == null {
      - debug error "No pet ID found for <def[value]>! Skipping this script!"
      - foreach next
      }
    - define pet_name <def[value].yaml_key[name]||null>
    - if <def[pet_name]> == null {
      - debug error "No pet name found for <def[value]>! Skipping this script!"
      - foreach next
      }
    - define pet_entity <def[value].yaml_key[entity]||null>
    - if <def[pet_entity]> == null {
      - debug error "No pet entity found for <def[value]>! Skipping this script!"
      - foreach next
      }
    - define pet_item_icon <def[value].yaml_key[item_icon].as_item||i@barrier>
    - yaml id:dpets_database set dpets.<def[pet_id]>.script:<def[value]>
    - foreach <server.list_scripts.filter[yaml_key[is_dpet_ability_pack]].filter[yaml_key[pet_id].is[==].to[<def[pet_id]>]].include[<def[value]>]||li@>:
      - define script <def[value]>
      - foreach <def[script].list_keys[abilities]||li@>:
        - yaml id:dpets_database set dpets.<def[pet_id]>.abilities.<def[value]>.script:<def[script]>
  check_config:
  - if <server.has_file[/dpets/config.yml]> {
    - yaml load:/dpets/config.yml id:dpets_config
    } else {
    - yaml create id:dpets_config
    - yaml id:dpets_config set pets.stats.attention.color:4
    - yaml id:dpets_config set pets.stats.attention.background_drain:-1
    - yaml id:dpets_config set pets.stats.friends.color:3
    - yaml id:dpets_config set pets.stats.friends.background_drain:-1
    - yaml id:dpets_config set pets.stats.energy.color:a
    - yaml id:dpets_config set pets.stats.energy.background_drain:5
    - yaml id:dpets_config set pets.use_stats:true
    - yaml savefile:/dpets/config.yml id:dpets_config
    }
#
#
# command handler
# all command interaction
#
#
dpets_command_handler:
  type: command
  debug: false
  name: pets
  description: Pets!
  usage: /pets
  aliases: 
  - pet
  - p
  tab complete: 
  - determine li@abilities|list|call|info|hide|help|play
  # todo ^ make this filtered based on argument
  script: 
  - choose <context.args.get[1]||null>:
    - case list:
      - inventory open d:in@dpets_main_gui
    - case call:
      - if <player.has_flag[dpets.cooldowns.call]> {
        - queue clear
        }
      - if <player.has_flag[dpets.generic_ability_cooldown]> {
        - narrate format:dpets_format3 "Your pet is still busy!"
        - queue clear
        }
      - if <proc[dpets_stat].context[energy]> < 26 && <proc[dpets_usestats]> {
        - narrate "Your pet does not have the energy to do this." format:dpets_format3
        - queue clear
        }
      - flag <player> "dpets.cooldowns.call:true" duration:2s
      - run dpets_improveStat def:energy|-25
      - run dpets_call_pet
    - case abilities:
      - if <player.flag[dpets.current_pet]||null> == null {
        - narrate "<&c>You need to have a pet spawned for this." format:dpets_format3
        - queue clear
        }
      - if <player.flag[dpets.current_pet_UUID].as_entity.is_spawned.not||true> {
        - narrate "<&c>Your pet is nowhere to be found!"  format:dpets_format3
        - queue clear
        }
      - if <context.args.size> > 1 {
        - if <yaml[dpets_database].list_keys[dpets.<player.flag[dpets.current_pet]||null>.abilities]||li@> contains <context.args.get[2]> {
          - narrate "You activate the <context.args.get[2]> ability!"  format:dpets_format3
          - run dpets_do_ability def:<context.args.get[2]> id:<proc[dpets_queue_id_maker].context[dpets_<player>_do_ability]>
          } else {
          - narrate "<&c>Your pet doesn't know this ability!"  format:dpets_format3
          }
        } else {
        - inventory open d:in@dpets_abilities_gui
        }
    - case hide:
      - if <player.has_flag[dpets.play_enabled]> {
        - narrate "<&c>You can't use this when pet play is enabled." format:dpets_format3
        - queue clear
        }
      - if <player.has_flag[dpets.hide_pets]> {
        - flag <player> dpets.hide_pets:!
        - narrate format:dpets_format3 "All pets will now be visible to you."
        } else {
        - flag <player> dpets.hide_pets
        - narrate format:dpets_format3 "All pets besides your own will now be hidden from you."
        }
      - run dpets_update_hide_pets
    - case play:
      - if <player.has_flag[dpets.hide_pets]> {
        - narrate "<&c>You can't use this when other pets are set to hidden." format:dpets_format3
        - queue clear
        }
      - define pet <player.flag[dpets.current_pet_UUID].as_entity||null>
      - if <player.flag[dpets.current_pet]||null> == null {
        - narrate "<&c>You need to have a pet spawned for this." format:dpets_format3
        - queue clear
        }
      - if <def[pet].is_spawned.not||true> {
        - narrate "<&c>Your pet is nowhere to be found!"  format:dpets_format3
        - queue clear
        }
      - if <player.has_flag[dpets.generic_ability_cooldown]> {
        - narrate format:dpets_format3 "Your pet is still busy!"
        - queue clear
        }
      - if <player.has_flag[dpets.play_enabled].not> {
        - flag <player> "dpets.play_enabled"
        - narrate format:dpets_format3 "Your pet will look for potential friends and play with them!"
        - run dpets_doplay id:<proc[dpets_queue_id_maker].context[dpets_<player>_do_play]>
        } else {
        - flag <player> "dpets.play_enabled:!"
        - flag <def[pet]> "dpets.play_enabled:!"
        - narrate format:dpets_format3 "Your pet will no longer pay attention to potential friends."
        - follow followers:<def[pet]> target:<player> speed:1 allow_wander
        }
    - case info:
      - define pet <player.flag[dpets.current_pet]||null>
      - if <def[pet]> == null {
        - narrate "<&c>You need to have a pet spawned for this." format:dpets_format3
        - queue clear
        }
      - run dpets_showInfo instantly
    - case loaded:
      - if <player.is_op.not> queue clear
      - narrate format:dpets_format3 "<&c>Loaded pets<&co>"
      - foreach <yaml[dpets_database].list_keys[dpets]||i@>:
        - narrate format:dpets_format3 "<&6><def[value]>"
        - narrate format:dpets_format3 "<&e>abilities<&co> <&7><yaml[dpets_database].list_keys[dpets.<def[value]>.abilities].formatted||>"
    - case help:
      - narrate format:dpets_format3 "/pet =<&gt> Opens the pet menu."
      - narrate format:dpets_format3 "/pet hide =<&gt> Toggles other pets their visibility."
      - narrate format:dpets_format3 "/pet help =<&gt> shows this info page."
      - if <player.is_op> {
        - narrate format:dpets_format3 "<&c>Op only commands<&co>"
        - narrate format:dpets_format3 "<&c>/pet loaded =<&gt> shows all loaded dPets."
        }
    - default:
      - inventory open d:in@dpets_command_gui
#
#
# pet managing
# spawning them, removing them, redirecting events on them
#
#
dpets_initiate_pet:
  type: task
  debug: false
  speed: 0
  script:
  - if <player.flag[dpets.current_pet]||null> != null {
    - ~run dpets_remove_pet
    }
  - define pet_id <def[1]||null>
  - if <def[pet_id]> == null {
    - debug error "No pet specified to initiate!"
    - queue clear
    }
  - flag <player> dpets.current_pet:<def[pet_id]>
  - define script <yaml[dpets_database].read[dpets.<def[pet_id]>.script]>
  - create "<&d><player.name>'s Pet" <def[script].yaml_key[entity]> <player.location.find.surface_blocks.within[3].random.above||<player.location>> save:pet
  - define pet <entry[pet].created_npc>
  - playeffect effect:cloud <def[pet].location> qty:25 offset:0.5 visibility:50
  - playsound sound:ENTITY_DONKEY_CHEST <def[pet].location> pitch:1
  - adjust <def[pet]> "custom_name:<&d><player.name>'s Pet"
  - flag <def[pet]> dpets.pet_owner:<player>
  - flag <player> "dpets.current_pet_UUID:<def[pet]>"
  - flag server "dpets.active_pets:->:<def[pet]>"
  - if "<def[script].list_keys[actions].contains[on spawn]||false>" {
    - inject <def[script]> "path:actions.on spawn"
    }
  - follow followers:<def[pet]> target:<player> speed:1 allow_wander
  - if <player.has_flag[dpets.<def[pet_id]>.stat_reset_cooldown].not> {
    - flag <player> dpets.<def[pet_id]>.stats.attention:100
    - flag <player> dpets.<def[pet_id]>.stats.friends:100
    - flag <player> dpets.<def[pet_id]>.stats.energy:100
    - flag <player> "dpets.<def[pet_id]>.stat_reset_cooldown:true duration:30m"
    }
  - foreach <server.list_online_players>:
    - if <def[value].has_flag[dpets.hide_pets]> {
      - run dpets_update_hide_pets player:<def[value]>
      }
dpets_remove_pet:
  type: task
  debug: false
  speed: 0
  script:
  - define pet <player.flag[dpets.current_pet_UUID]||null>
  - foreach <queue.list.parse[id].filter[starts_with[dpets_<player>_do_ability]]>:
    - queue clear <def[value].as_queue>
  - foreach <queue.list.parse[id].filter[starts_with[dpets_<player>_do_play]]>:
    - queue clear <def[value].as_queue>
  - if <def[pet].is_spawned||false> {
    - playeffect effect:cloud <def[pet].location> qty:25 offset:0.5 visibility:50
    - remove <def[pet]>
    }
  - flag server "dpets.active_pets:<-:<def[pet]>"
  - flag <player> dpets.current_pet_UUID:!
  - flag <player> dpets.current_pet:!
  - flag <player> "dpets.play_enabled:!"
dpets_update_hide_pets:
  type: task
  debug: false
  speed: 0
  script:
  - if <player.has_flag[dpets.hide_pets]> {
    - foreach <server.flag[dpets.active_pets].as_list||li@> {
      - if <player> != <def[value].flag[dpets.pet_owner]||null> {
        - adjust <player> hide_entity:<def[value]>
        }
      }
    } else {
    - foreach <server.flag[dpets.active_pets].as_list||li@> {
      - adjust <player> show_entity:<def[value]>
      }
    }
dpets_call_pet:
  type: task
  debug: false
  speed: 0
  script:
  - define pet <player.flag[dpets.current_pet_UUID]||null>
  - if <def[pet]> == null queue clear
  - if <def[pet].is_spawned||false> {
    - teleport <def[pet]> <player.location.find.surface_blocks.within[3].random.above||<player.location>>
    - playeffect effect:cloud <def[pet].location> qty:25 offset:0.5 visibility:50
    - playsound sound:ENTITY_DONKEY_CHEST <def[pet].location> pitch:1
    } else {
    - ~run dpets_initiate_pet
    }
  - define pet_id <player.flag[dpets.current_pet]||null>
  - define script <yaml[dpets_database].read[dpets.<def[pet_id]>.script]||null>
  - if "<def[script].list_keys[actions].contains[on call]||false>" {
    - inject <def[script]> "path:actions.on call"
    }
  - wait 1t
  - walk stop <def[pet]>
  - follow followers:<def[pet]> target:<player> speed:1 allow_wander
dpets_do_ability:
  type: task
  debug: false
  speed: 0
  script:
  - if <player.has_flag[dpets.generic_ability_cooldown]> {
    - narrate format:dpets_format3 "Your pet is still busy!"
    - queue clear
    }
  - define pet <player.flag[dpets.current_pet]||null>
  - define ability <def[1]||null>
  - if <def[ability]> == null queue clear
  - define script <yaml[dpets_database].read[dpets.<def[pet]>.abilities.<def[ability]>.script]>
  - define duration <def[script].yaml_key[abilities.<def[ability]>.global_cooldown].as_duration||5s>
  - define pet <player.flag[dpets.current_pet_uuid]||null>
  - define energy <def[script].yaml_key[abilities.<def[ability]>.energy].mul[-1]||-5>
  - if <proc[dpets_stat].context[energy].add[<def[energy]>]> < 0 && <proc[dpets_usestats]> {
    - narrate "Your pet does not have the energy to do this." format:dpets_format3
    - queue clear
    }
  - follow followers:<def[pet]> stop
  - flag <player> "dpets.generic_ability_cooldown:true" duration:<def[duration]>
  - run dpets_improveStat "def:energy|<def[energy]>"
  - inject <def[script]> "path:abilities.<def[ability]>.script"
  - follow followers:<def[pet]> target:<player> speed:1 allow_wander
  - run dpets_improveStat def:attention|<util.random.int[5].to[15]>
dpets_doplay:
  type: task
  debug: false
  speed: 0
  script:
  - define pet_id <player.flag[dpets.current_pet]||null>
  - define pet <player.flag[dpets.current_pet_uuid]||null>
  - define script <yaml[dpets_database].read[dpets.<def[pet_id]>.script]||null>
  - if <def[pet_id]> == null queue clear
  - if <def[pet].is_spawned.not||true> queue clear
  - flag <def[pet]> "dpets.play_enabled"
  - foreach <queue.list.exclude[<queue>].parse[id].filter[starts_with[dpets_<player>_do_play]]>:
    - queue clear <def[value].as_queue>
  - while <player.has_flag[dpets.play_enabled].and[<server.entity_is_spawned[<def[pet]>]>].and[<player.is_online>]||false>:
    - define nearby <server.flag[dpets.active_pets].as_list.exclude[<def[pet]>].filter[has_flag[dpets.play_enabled]].filter[location.distance_squared[<player.location>].is[less].than[100]]||li@>
    - if <def[nearby].size> < 1 {
      - if <def[last_follow_action]||follow> != follow {
        - follow followers:<def[pet]> target:<player> speed:1 allow_wander
        - define last_follow_action follow
        }
      - wait 5s
      - while next
      }
    - follow followers:<def[pet]> stop
    - define last_follow_action no_follow
    - define friend <def[nearby].random>
    - ~walk <def[pet]> <def[friend].location.add[<util.random.int[-2].to[2]>,0,<util.random.int[-2].to[2]>].find.surface_blocks.within[3].get[1]||<player.location>>
    - wait 2t
    - look <def[pet]> <def[friend].location>
    - if <util.random.int[1].to[5]> == 1 && <proc[dpets_stat].context[energy]> > 4 {
      - run dpets_improveStat def:energy|-5
      - run dpets_improveStat def:friends|<util.random.int[10].to[25]>
      - if "<def[script].list_keys[actions].contains[on happy]>" {
        - inject <def[script]> "path:actions.on happy"
        }
      }
    - wait <util.random.int[3].to[7]>s
dpets_doStatDrain:
  type: task
  debug: false
  speed: 2t
  script:
  - if <def[1].exists.not> define 1 <player||null>
  - if <def[1].is_online.not||true> queue clear
  - define pet <player.flag[dpets.current_pet]||null>
  - if <def[pet]> == null queue clear
  - define a_fx <yaml[dpets_config].read[pets.stats.attention.background_drain]||-1>
  - define b_fx <yaml[dpets_config].read[pets.stats.friends.background_drain]||-1>
  - define c_fx <yaml[dpets_config].read[pets.stats.energy.background_drain]||5>
  - flag <player> dpets.<def[pet]>.stats.attention:<player.flag[dpets.<def[pet]>.stats.attention].add[<def[a_fx]>].max[0]||0>
  - flag <player> dpets.<def[pet]>.stats.friends:<player.flag[dpets.<def[pet]>.stats.friends].add[<def[b_fx]>].max[0]||0>
  - flag <player> dpets.<def[pet]>.stats.energy:<player.flag[dpets.<def[pet]>.stats.energy].add[<def[c_fx]>].min[100]||0>
dpets_improveStat:
  type: task
  debug: true
  speed: 0
  script:
  - if <proc[dpets_usestats].not> queue clear
  - define pet <player.flag[dpets.current_pet]||null>
  - if <def[pet]> == null queue clear
  - if li@attention|friends|energy !contains <def[1]||null> queue clear
  - if <def[2]||null> !matches number queue clear
  - flag <player> dpets.<def[pet]>.stats.<def[1]>:<player.flag[dpets.<def[pet]>.stats.<def[1]>].add[<def[2]>].max[0].min[100]||0>
  - define color &<yaml[dpets_config].read[pets.stats.<def[1]>.color]||4>
  - actionbar "<def[color].parse_color><def[1].to_titlecase><&co>  <proc[dpets_util_progress_bar].context[<player.flag[dpets.<def[pet]>.stats.<def[1]>]||0>|20|<&hrt>|<def[color]>|&0]> <def[color].parse_color><tern[<def[2].is[more].than[0]>]:+<def[2]>||<def[2]>>" format:dpets_format3
dpets_doStatEffect:
  type: task
  debug: false
  speed: 2t
  script:
  - if <proc[dpets_usestats].not> queue clear
  - define pet_id <player.flag[dpets.current_pet]||null>
  - define pet <player.flag[dpets.current_pet_uuid]||null>
  - if <def[pet]> == null queue clear
  - define script <yaml[dpets_database].read[dpets.<def[pet_id]>.script]>
  - if <player.flag[dpets.<def[pet_id]>.stats.attention]||0> < 1 {
    - if <util.random.int[1].to[5]> {
      - narrate format:dpets_format3 "Your pet was feeling neglected and has gone to sleep."
      - run dpets_remove_pet
      } else {
      - narrate format:dpets_format3 "(!) Your pet is feeling neglected."
      - if "<def[script].list_keys[actions].contains[on sad]>" {
        - inject <def[script]> "path:actions.on sad"
        }
      }
    - queue clear
    }
  - if <player.flag[dpets.<def[pet_id]>.stats.friends]||0> < 1 {
    - if <util.random.int[1].to[10]> {
      - narrate format:dpets_format3 "Your pet was feeling lonely and has gone to sleep."
      - run dpets_remove_pet
      } else {
      - narrate format:dpets_format3 "(!) Your pet is feeling lonely."
      - if "<def[script].list_keys[actions].contains[on sad]>" {
        - inject <def[script]> "path:actions.on sad"
        }
      }
    }
dpets_showInfo:
  type: task
  debug: false
  speed: 0
  script:
  - define pet <player.flag[dpets.current_pet]||null>
  - if <def[pet]> == null queue clear
  - define colA &<yaml[dpets_config].read[pets.stats.attention.color]||4>
  - define colB &<yaml[dpets_config].read[pets.stats.friends.color]||2>
  - define colC &<yaml[dpets_config].read[pets.stats.energy.color]||6>
  - define book "i@written_book[book=author|Pets|title|Pet info|pages|<def[colA].parse_color>Attention<&co> &nl<proc[dpets_util_progress_bar].context[<player.flag[dpets.<def[pet]>.stats.attention]||0>|20|<&hrt>|<def[colA]>|&0]>&nl<def[colB].parse_color>Friends<&co>&nl<proc[dpets_util_progress_bar].context[<player.flag[dpets.<def[pet]>.stats.friends]||0>|20|<&hrt>|<def[colB]>|&0]>&nl<def[colC].parse_color>Energy<&co>&nl<proc[dpets_util_progress_bar].context[<player.flag[dpets.<def[pet]>.stats.energy]||0>|20|<&hrt>|<def[colC]>|&0]>]"
  - fakeitem <def[book]> slot:<player.item_in_hand.slot> duration:1t
  - adjust <player> open_book
dpets_pet_events:
  type: world
  debug: false
  events:
    on player teleports:
    - if <context.origin.distance_squared[<context.destination>]||100> < 25 queue clear
    - define pet <player.flag[dpets.current_pet]||null>
    - if context.origin.world> != <context.destination.world> {
      - run dpets_remove_pet instantly
      - wait 1t
      - if <def[pet]> != null run dpets_initiate_pet def:<def[pet]>
      } else {
      - wait 1t
      - run dpets_call_pet
      }
    on entity damaged:
    - if <context.entity.has_flag[dpets.pet_owner]||false> {
      - determine cancelled passively
      }
    on player damages entity ignorecancelled:true:
    - if <context.entity.flag[dpets.pet_owner]||null> != <player> queue clear
    - define script <yaml[dpets_database].read[dpets.<player.flag[dpets.current_pet]||null>.script]||null>
    - define pet <player.flag[dpets.current_pet_uuid]||null>
    - define pet_id <player.flag[dpets.current_pet]||null>
    - if <player.has_flag[dpets.cooldowns.left_click]> {
      - queue clear
      }
    - flag <player> "dpets.cooldowns.left_click:true" duration:2s
    - run dpets_improveStat def:attention|1
    - if "<def[script].list_keys[actions].contains[on left click]||false>" {
      - inject <def[script]> "path:actions.on left click"
      }
    on player right clicks entity:
    - if <context.entity.flag[dpets.pet_owner]||null> != <player> queue clear
    - define script <yaml[dpets_database].read[dpets.<player.flag[dpets.current_pet]||null>.script]||null>
    - define pet <player.flag[dpets.current_pet_uuid]||null>
    - if <player.has_flag[dpets.cooldowns.right_click]> {
      - queue clear
      }
    - flag <player> "dpets.cooldowns.right_click:true" duration:2s
    - run dpets_improveStat def:attention|1
    - if "<def[script].list_keys[actions].contains[on right click]||false>" {
      - inject <def[script]> "path:actions.on right click"
      }
    on player quits:
    - run dpets_remove_pet
    on player joins:
    - run dpets_remove_pet
    on system time minutely:
    - if <proc[dpets_usestats].not> queue clear
    - repeat 5:
      - foreach <server.flag[dpets.active_pets].as_list.filter[is_spawned]||li@>:
        - run dpets_doStatDrain player:<def[value].flag[dpets.pet_owner]||null>
      - wait 10s
    - if <util.random.int[1].to[10]> != 1 queue clear
    - foreach <server.flag[dpets.active_pets].as_list.filter[is_spawned]||li@>:
      - run dpets_doStatEffect player:<def[value].flag[dpets.pet_owner]||null>
#
#
# dregions compatability
# if this breaks blame |anthony|, not my job yo
#
#
dRegions_Flag_Allow-dPets:
  type: item
  debug: false
  material: i@paper
  display name: "<&4>[<&6>Allow-dPets<&4>]"
  lore:
  - <&5>Are dPets allowed in this region
  event_hooks: player_entered_region
  event_priority: 0
  region_highestOnly: true
  flag_type: sg
  flag_name: Allow-Pets
  flag_help: State flag controlling who is allowed to bring dPets into a region. Can be set to allow, deny, or none and accepts the -g group switch.
  flag_takeGroup: true
  flag_regionDefault: allow/all
  flag_globalDefault: allow/all
  msg_cancelled: 'You may not bring dPets into this area!'
  event-cancelled:
    - run dpets_remove_pet
#
#
# GUIs
# all the guis and their events
#
#
dpets_main_gui:
  type: inventory
  debug: false
  inventory: CHEST
  title: <&9>Pets!
  size: 54
  definitions:
    next: i@human_skull[skull_skin=MHF_ArrowRight;display_name=<&c>Next page]
    previous: i@human_skull[skull_skin=MHF_ArrowLeft;display_name=<&c>Previous page] 
  procedural items:
  - define items li@
  - foreach <yaml[dpets_database].list_keys[dpets]||i@>:
    - if <proc[dpets_haspet].context[<def[value]>].not> foreach next
    - define script <yaml[dpets_database].read[dpets.<def[value]>.script]>
    - define item <def[script].yaml_key[item_icon].as_item||i@barrier>
    - adjust <def[item]> display_name:<&b><def[script].yaml_key[name]||???> save:item
    - adjust <entry[item].result> "lore:<&e>Click to call pet!||<&6><def[script].yaml_key[description]||>" save:item
    - nbt <entry[item].result> dpet:<def[value]> save:item
    - define item <entry[item].new_item>
    - define items <def[items].include[<def[item]>]>
  - determine <def[items].get[1].to[45]||li@>
  slots:
    - "[] [] [] [] [] [] [] [] []"
    - "[] [] [] [] [] [] [] [] []"
    - "[] [] [] [] [] [] [] [] []"
    - "[] [] [] [] [] [] [] [] []"
    - "[] [] [] [] [] [] [] [] []"
    # - "[previous] [i@air] [i@air] [i@air] [i@air] [i@air] [i@air] [i@air] [next]"
dpets_abilities_gui:
  type: inventory
  debug: false
  inventory: CHEST
  title: <&9>Pet abilities!
  size: 54
  definitions:
    next: i@human_skull[skull_skin=MHF_ArrowRight;display_name=<&c>Next page]
    previous: i@human_skull[skull_skin=MHF_ArrowLeft;display_name=<&c>Previous page] 
  procedural items:
  - define pet <player.flag[dpets.current_pet]||null>
  - define items li@
  - foreach <yaml[dpets_database].list_keys[dpets.<def[pet]>.abilities]||li@>:
    - define script <yaml[dpets_database].read[dpets.<def[pet]>.abilities.<def[value]>.script]||null>
    - if <proc[dpets_hasability].context[<def[pet]>|<def[value]>].not> foreach next
    - define item <def[script].yaml_key[abilities.<def[value]>.item_icon].as_item||i@barrier>
    - adjust <def[item]> display_name:<&b><def[script].yaml_key[abilities.<def[value]>.name]||???> save:item
    - adjust <entry[item].result> "lore:<&e>Click to activate the <def[script].yaml_key[abilities.<def[value]>.name]||???> ability!||<&6><def[script].yaml_key[abilities.<def[value]>.description]||>" save:item
    - adjust <entry[item].result> "flags:li@hide_enchants|hide_attributes" save:item
    - nbt <entry[item].result> dpet:<def[value]> save:item
    - define item <entry[item].new_item>
    - define items <def[items].include[<def[item]>]>
  - determine <def[items].get[1].to[45]||li@>
  slots:
    - "[] [] [] [] [] [] [] [] []"
    - "[] [] [] [] [] [] [] [] []"
    - "[] [] [] [] [] [] [] [] []"
    - "[] [] [] [] [] [] [] [] []"
    - "[] [] [] [] [] [] [] [] []"
    # - "[previous] [i@air] [i@air] [i@air] [i@air] [i@air] [i@air] [i@air] [next]"
dpets_command_gui:
  type: inventory
  debug: false
  inventory: CHEST
  title: <&9>Pets!
  size: 9
  definitions:
    1: i@storage_minecart[enchantments=li@durability,1;flags=li@hide_enchants;display_name=<&b>Pets!;lore=<&e>Click here to view all your pets!]
    2: i@book[enchantments=li@durability,1;flags=li@hide_enchants;display_name=<&b>Abilities!;lore=<&e>Click here to view the unlocked|<&e>abilities for your current pet!]
    3: i@ender_pearl[enchantments=li@durability,1;flags=li@hide_enchants;display_name=<&b>Call pet!;lore=<&e>Click here to call|<&e>your current pet to your side!]
    4: i@book_and_quill[enchantments=li@durability,1;flags=li@hide_enchants;display_name=<&b>Pet info!;lore=<&e>Click here to check|<&e>how your pet is doing!]
    5: i@feather[enchantments=li@durability,1;flags=li@hide_enchants;display_name=<&b>Play with friends!;lore=<&e>Click here to let your|<&e>pet search for friends to play with!]
  slots:
    - "[1] [2] [3] [4] [5] [] [] [] []"
dpets_gui_events:
  type: world
  debug: false
  events:
    on player clicks in dpets_main_gui:
    - playsound <player> sound:ITEM_ARMOR_EQUIP_LEATHER pitch:1
    - determine cancelled passively
    - if <context.raw_slot> < 46 && <context.item||i@air> != i@air {
      - define pet_ID <context.item.nbt[dpet]||null>
      - if <def[pet_ID]> == null queue clear
      - inventory close
      - if <player.flag[dpets.current_pet]||null> != <def[pet_ID]> {
        - run dpets_initiate_pet def:<def[pet_ID]>
        } else {
        - run dpets_remove_pet
        }
      }
    on player clicks in dpets_abilities_gui:
    - playsound <player> sound:ITEM_ARMOR_EQUIP_LEATHER pitch:1
    - determine cancelled passively
    - if <context.raw_slot> < 46 && <context.item||i@air> != i@air {
      - inventory close
      - define ability <context.item.nbt[dpet]||null>
      - run dpets_do_ability def:<def[ability]> id:<proc[dpets_queue_id_maker].context[dpets_<player>_do_ability]>
      }
    on player clicks in dpets_command_gui:
    - playsound <player> sound:ITEM_ARMOR_EQUIP_LEATHER pitch:1
    - determine cancelled passively
    - if <context.item||i@air> == i@air || <context.raw_slot> > 9 queue clear
    - inventory close
    - choose <context.raw_slot>:
      - case 1:
        - execute as_player "pet list"
      - case 2:
        - execute as_player "pet abilities"
      - case 3:
        - execute as_player "pet call"
      - case 4:
        - execute as_player "pet info"
      - case 5:
        - execute as_player "pet play"
#
#
# tags
# procedure scripts
#
#
dpets_haspet:
  type: procedure
  debug: false
  script:
  - if <player.has_flag[dpets.pet.%1%]||false> || <player.has_permission[dpets.pet.%1%]||false> || <player.has_permission[dpets.pet.%1%].global||false> || <player.is_op||false> || true {
    - determine true
    } else {
    - determine false
    }
dpets_hasability:
  type: procedure
  debug: false
  script:
  - if <player.has_flag[dpets.pet.%1%].abilities.%2%||false> || <player.has_flag[dpets.pet.%1%.abilities.*]||false> || <player.has_permission[dpets.pet.%1%.abilities.%2%]||false> || <player.has_permission[dpets.pet.%1%.abilities.%2%].global||false> || <player.is_op||false> || true {
    - determine true
    } else {
    - determine false
    }
dpets_getpet:
  type: procedure
  debug: false
  script:
  - determine <player.flag[dpets.current_pet_UUID]||null>
dpets_queue_id_maker:
  type: procedure
  debug: false
  script:
  - define prefix <def[1]||>
  - define id <def[prefix]>_<util.random.duuid>
  - while <queue.list.parse[id].contains[<def[id]>]>:
    - define id <def[prefix]>_<util.random.duuid>
  - determine <def[id]>
dpets_stat:
  type: procedure
  debug: false
  script:
  - define stat <def[1]>
  - define pet <player.flag[dpets.current_pet]||null>
  - determine <player.flag[dpets.<def[pet]>.stats.<def[stat]>]||0>
dpets_usestats:
  type: procedure
  debug: false
  script:
  - determine <yaml[dpets_config].read[pets.use_stats]||true>
dpets_util_progress_bar:
  type: procedure
  debug: false
  script:
  - define percentage <def[1]||0>
  - if <def[percentage].as_int||none> == none {
    - define percentage 0
    }
  - if <def[2].exists> {
    - define max <def[2]>
    }
  - if <def[max].as_int||none> == none {
    - define max 10
    }
  - if <def[3].exists> {
    - define char <def[3].substring[1,1]||=>
    } else {
    - define char =
    }
  - if <def[4].exists> {
    - define col1 <def[4]>
    } else {
    - define col1 &a
    }
  - if <def[5].exists> {
    - define col2 <def[5]>
    } else {
    - define col2 &7
    }
  - define string <el@.pad_right[<def[max]>].with[<def[char]>]>
  - define split <def[max].div[100].mul[<def[percentage]>].as_int>
  - determine "<def[col1].parse_colors><def[string].substring[1,<def[split]>]><def[col2].parse_colors><def[string].substring[<def[split].add[1].as_int>,<def[max]>]>"
#
# format scripts
# human to pet, and pet to human
#
#
dpets_format1:
  type: format
  format: <&8>[<&6>Pets<&8>]<&e> You<&co><&7> <text>
dpets_format2:
  type: format
  format: <&8>[<&6>Pets<&8>]<&e> Pet<&co><&7> <text>
dpets_format3:
  type: format
  format: <&8>[<&6>Pets<&8>] <&7><text>
#
#
# templates
# showing you how it's done!
#
# note: NEVER clear the queues of an ability!
#
#####################
# template pet
#####################
# dpets_template:
  # type: yaml data
  # is_dpet: true
  # pet_id: <ID here>
  # name: <name>
  # entity: e@entity
  # description: My lovely pet!
  # item_icon: i@diamond
  # actions:
    # on spawn:
    # - narrate "I missed you!" format:dpets_format2
    # on left click:
    # - narrate "pat pat pat" format:dpets_format2
    # on right click:
    # - narrate "pat pat pat" format:dpets_format2
    # on call:
    # - narrate "cmere boy" format:dpets_format2
    # on happy:
    # - narrate " im happy yo" format:dpets_format2
    # on sad:
    # - narrate " im sad yo" format:dpets_format2
  # abilities:
    # ability1:
      # item_icon: i@bone
      # name: MY ability
      # description: Make your pet do a backflip!
      # global_cooldown: 5s
      # energy: 10
      # script:
      # - narrate "do a backflip! use <def[pet]> for pet's entity ID!" format:dpets_format2
    # ability2:
      # item_icon: i@diamond
      # name: MY other ability
      # description: Make your pet do a frontflip!
      # global_cooldown: 5s
      # energy: 5
      # script:
      # - narrate "do a frontflip!" format:dpets_format2
#####################
# template ability pack
#####################
# dpets_template_abilities:
  # type: yaml data
  # is_dpet_ability_pack: true
  # pet_id: <ID here>
  # abilities:
    # ability3:
      # item_icon: i@gold_ingot
      # name: yet another ability
      # description: Make your pet do a cartwheel!
      # global_cooldown: 5s
      # energy: 2
      # script:
      # - narrate "do acartwheel!" format:dpets_format2
    # ability4:
      # item_icon: i@iron_ingot
      # name: the last ability!
      # description: Make your pet depressed!
      # global_cooldown: 5s
      # energy: 5
      # script:
      # - narrate "hey you suck" format:dpets_format2
#
#
# pet list
# all pets are listed below
#
# note: NEVER clear the queues of an ability!
# note: dpets may clear the queue of any ability at any time! Do not spawn in things/modify things that have to be cleaned up! (or if you do, immediately run a delayed task that cleans them up seperately)
#
#####################
# default wolf
#####################
dpets_wolf:
  type: yaml data
  is_dpet: true
  pet_id: wolf
  name: Wolf
  entity: e@wolf[age=baby]
  description: Who's a good boy??
  item_icon: i@bone
  actions:
    on spawn:
    - narrate "Woof woof!" format:dpets_format2
    - repeat 2:
      - playsound sound:ENTITY_WOLF_AMBIENT <def[pet].location>
      - wait 5t
    on left click:
    - playsound sound:ENTITY_WOLF_pant <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on right click:
    - playsound sound:ENTITY_WOLF_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    - if <def[pet].sitting||true> {
      - adjust <def[pet]> sitting:false
      } else {
      - adjust <def[pet]> sitting:true
      }
    on call:
    - adjust <def[pet]> sitting:false
    - narrate "Woof!" format:dpets_format2
    - playsound sound:ENTITY_WOLF_AMBIENT <def[pet].location>
    on happy:
    - choose <util.random.int[1].to[2]>:
      - case 1:
        - playsound sound:ENTITY_WOLF_ambient <def[pet].location>
        - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
      - case 2:
        - playsound sound:ENTITY_WOLF_pant <def[pet].location>
        - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on sad:
    - choose <util.random.int[1].to[2]>:
      - case 1:
        - playsound sound:ENTITY_WOLF_whine <def[pet].location>
        - playeffect effect:flame <def[pet].location> qty:5 offset:0.5 visibility:50
      - case 2:
        - playsound sound:ENTITY_WOLF_growl <def[pet].location>
        - playeffect effect:flame <def[pet].location> qty:5 offset:0.5 visibility:50
  abilities:
    growl:
      item_icon: i@bone
      name: Growl
      description: Make your wolf growl!
      global_cooldown: 2s
      energy: 2
      script:
      - narrate "Grrrrr!" format:dpets_format2
      - playsound sound:ENTITY_WOLF_growl <def[pet].location>
      - playeffect effect:MOBSPAWNER_FLAMES <def[pet].location> qty:5 offset:0.5 visibility:50
    fetch:
      item_icon: i@snow_ball
      name: Fetch
      description: Throw a ball and see if your wolf can find it!
      global_cooldown: 15s
      energy: 10
      script:
      - adjust <def[pet]> sitting:false
      - shoot e@snowball save:ball
      - playsound sound:ENTITY_DONKEY_CHEST <player.location> pitch:1
      - define ball <entry[ball].shot_entities.get[1]>
      - playsound sound:ENTITY_WOLF_AMBIENT <def[pet].location>
      - while <def[ball].is_spawned||false>:
        - define location <def[ball].location||<player.location>>
        - wait 5t
      - repeat 2:
        - playsound sound:ENTITY_WOLF_AMBIENT <def[pet].location>
        - wait 5t
      - define location <def[location].find.surface_blocks.within[5].sort_by_number[distance_squared].get[1].above||<def[location]>>
      - while <def[pet].location.distance_squared[<def[location]>].is[more].than[10]||true>:
        - walk <def[pet]> <def[location]> auto_range speed:1.5
        - wait 1s
        - if <def[loop_index]> > 25 {
          - while stop
          }
      - wait 10t
      - walk <def[pet]> <player.location> auto_range speed:1.5
      - wait 3s
      - choose <util.random.int[1].to[2]>:
        - case 1:
          - narrate "Your pet found the ball!" format:dpets_format3
          - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
          - playsound sound:ENTITY_WOLF_AMBIENT <def[pet].location>
        - case 2:
          - narrate "Your pet lost the ball!" format:dpets_format3
          - playsound sound:ENTITY_WOLF_WHINE <def[pet].location>
          - playeffect effect:MOBSPAWNER_FLAMES <def[pet].location> qty:5 offset:0.5 visibility:50
    shake:
      item_icon: i@water_bucket
      name: Shake
      description: Do the harlem shake!
      global_cooldown: 2s
      energy: 2
      script:
      - playsound sound:ENTITY_WOLF_SHAKE <def[pet].location>
      - animate <def[pet]> animation:wolf_shake
      - wait 1s
      - repeat 2:
        - playsound sound:ENTITY_WOLF_ambient <def[pet].location>
        - wait 5t
    sit:
      item_icon: i@bed
      name: Sit
      description: Make your wolf sit!
      global_cooldown: 2s
      energy: -1
      script:
      - adjust <def[pet]> sitting:true
      - repeat 2:
        - playsound sound:ENTITY_WOLF_ambient <def[pet].location>
        - wait 5t
    stand:
      item_icon: i@bed
      name: Stand
      description: Make your wolf stand!
      global_cooldown: 2s
      energy: 1
      script:
      - adjust <def[pet]> sitting:false
      - repeat 2:
        - playsound sound:ENTITY_WOLF_ambient <def[pet].location>
        - wait 5t
    dig:
      item_icon: i@wood_spade
      name: Dig
      description: Make your wolf dig for treasures!
      global_cooldown: 5s
      energy: 5
      script:
      - repeat 2:
        - playsound sound:ENTITY_WOLF_ambient <def[pet].location>
        - wait 5t
      - define location <def[pet].location.add[<def[pet].location.direction.vector>].sub[0,1.1,0]>
      - repeat 20:
        - playsound sound:BLOCK_grass_HIT <def[location]>
        - playsound sound:BLOCK_sand_HIT <def[location]> pitch:0.5
        - playeffect effect:blockcrack_2 qty:15 visibility:40 offset:0.1 <def[location]>
        - wait 2t
      - define item <li@i@bone|i@snow_ball|i@slime_ball|i@skeleton_skull|i@leather_boots.random>
      - displayitem <def[item]> <def[location]> duration:5s
      - narrate "Your pet found <&b><def[item].formatted><&7>!" format:dpets_format3
      - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
      - playsound sound:ENTITY_WOLF_AMBIENT <def[pet].location>
    howl:
      item_icon: i@watch
      name: Howl
      description: Howl to the moon with your wolf!
      global_cooldown: 5s
      energy: 2
      script:
      - playsound sound:ENTITY_WOLF_howl <def[pet].location> pitch:0.8
      - repeat 5:
        - playeffect effect:CLOUD <def[pet].location> qty:5 offset:0.5 visibility:50
        - wait 5t
    grow:
      item_icon: i@potion
      name: Grow
      global_cooldown: 3s
      description: Make your wolf bigger!
      energy: 15
      script:
      - playsound sound:ENTITY_WOLF_AMBIENT <def[pet].location>
      - playeffect effect:CLOUD <def[pet].location> qty:100 offset:0.6 visibility:50
      - wait 1t
      - adjust <def[pet]> age:adult
    shrink:
      item_icon: i@potion
      name: Shrink
      global_cooldown: 3s
      description: Make your wolf smaller!
      energy: 15
      script:
      - playsound sound:ENTITY_WOLF_AMBIENT <def[pet].location>
      - playeffect effect:CLOUD <def[pet].location> qty:100 offset:0.6 visibility:50
      - wait 1t
      - adjust <def[pet]> age:baby
#####################
# default ocelot
#####################
dpets_ocelot:
  type: yaml data
  is_dpet: true
  pet_id: ocelot
  name: Ocelot
  entity: e@ocelot[age=baby]
  description: Not your average Mr. Fluffles!
  item_icon: i@human_skull[skull_skin=1bee9df5-4f71-42a2-bf52-d97970d3fea3|eyJ0aW1lc3RhbXAiOjE0MzA0NTMyNDY1NTcsInByb2ZpbGVJZCI6IjFiZWU5ZGY1NGY3MTQyYTJiZjUyZDk3OTcwZDNmZWEzIiwicHJvZmlsZU5hbWUiOiJNSEZfT2NlbG90IiwiaXNQdWJsaWMiOnRydWUsInRleHR1cmVzIjp7IlNLSU4iOnsidXJsIjoiaHR0cDovL3RleHR1cmVzLm1pbmVjcmFmdC5uZXQvdGV4dHVyZS81NjU3Y2Q1YzI5ODlmZjk3NTcwZmVjNGRkY2RjNjkyNmE2OGEzMzkzMjUwYzFiZTFmMGIxMTRhMWRiMSJ9fX0=]
  actions:
    on spawn:
    - narrate "Meow!" format:dpets_format2
    - playsound sound:ENTITY_CAT_AMBIENT <def[pet].location>
    on left click:
    - playsound sound:ENTITY_CAT_PURR <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on right click:
    - playsound sound:ENTITY_CAT_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    - if <def[pet].sitting||true> {
      - adjust <def[pet]> sitting:false
      } else {
      - adjust <def[pet]> sitting:true
      }
    on call:
    - adjust <def[pet]> sitting:false
    - narrate "Meow!" format:dpets_format2
    - playsound sound:ENTITY_CAT_AMBIENT <def[pet].location>
    on happy:
    - playsound sound:ENTITY_CAT_PURREOW <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on sad:
    - playsound sound:ENTITY_CAT_HISS <def[pet].location>
    - playeffect effect:flame <def[pet].location> qty:5 offset:0.5 visibility:50
  abilities:
    sit:
      item_icon: i@bed
      name: Sit
      description: Make your ocelot sit!
      global_cooldown: 2s
      energy: -1
      script:
      - adjust <def[pet]> sitting:true
      - playsound sound:ENTITY_CAT_AMBIENT <def[pet].location>
    stand:
      item_icon: i@bed
      name: Stand
      description: Make your ocelot stand!
      global_cooldown: 2s
      energy: 1
      script:
      - adjust <def[pet]> sitting:false
      - playsound sound:ENTITY_CAT_AMBIENT <def[pet].location>
    fetch:
      item_icon: i@snow_ball
      name: Fetch
      description: Attempt to play fetch with your ocelot?
      global_cooldown: 3s
      energy: -2
      script:
      - adjust <def[pet]> sitting:true
      - shoot e@snowball save:ball
      - wait 1s
      - playsound sound:ENTITY_CAT_PURR <def[pet].location>
      - narrate "Your pet does not seem very interested." format:dpets_format3
      - wait 1s
      - playsound sound:ENTITY_CAT_AMBIENT <def[pet].location>
      - wait 1s
      - playsound sound:ENTITY_CAT_PURR <def[pet].location>
      - adjust <def[pet]> sitting:false
    chase:
      item_icon: i@carrot_stick
      name: Chase
      description: Have your ocelot chase vermin!
      global_cooldown: 12s
      energy: 10
      script:
      - adjust <def[pet]> sitting:false
      - spawn e@endermite[invulnerable=true;has_ai=false] <def[pet].location.find.surface_blocks.within[3].random.above||<def[pet].location>> save:mouse
      - define mouse <entry[mouse].spawned_entities.get[1]>
      - playsound sound:ENTITY_CAT_AMBIENT <def[pet].location>
      - repeat 10:
        - if <def[mouse].is_spawned.not||true> repeat stop
        - define location <def[mouse].location.find.surface_blocks.within[3].random.above||<def[pet].location>>
        - walk <def[mouse]> <def[location]>
        - wait 10t
        - walk <def[pet]> <def[location]> speed:1.5
        - wait 10t
        - if <util.random.int[1].to[4]> == 1 {
          - playsound sound:ENTITY_CAT_AMBIENT <def[pet].location>
          }
      - remove <def[mouse]>
      - choose <util.random.int[1].to[2]>:
        - case 1:
          - narrate "Your pet caught the vermin!" format:dpets_format3
          - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
          - playsound sound:ENTITY_CAT_PURREOW <def[pet].location>
        - case 2:
          - narrate "The vermin got away!" format:dpets_format3
          - playsound sound:ENTITY_CAT_ambient <def[pet].location>
          - playeffect effect:MOBSPAWNER_FLAMES <def[pet].location> qty:5 offset:0.5 visibility:50
    grow:
      item_icon: i@potion
      name: Grow
      global_cooldown: 3s
      description: Make your ocelot bigger!
      energy: 15
      script:
      - playsound sound:ENTITY_CAT_PURREOW <def[pet].location>
      - playeffect effect:CLOUD <def[pet].location> qty:100 offset:0.6 visibility:50
      - wait 1t
      - adjust <def[pet]> age:adult
    shrink:
      item_icon: i@potion
      name: Shrink
      global_cooldown: 3s
      description: Make your ocelot smaller!
      energy: 15
      script:
      - playsound sound:ENTITY_CAT_PURREOW <def[pet].location>
      - playeffect effect:CLOUD <def[pet].location> qty:100 offset:0.6 visibility:50
      - wait 1t
      - adjust <def[pet]> age:baby
#####################
# default rabbit
#####################
dpets_bunny:
  type: yaml data
  is_dpet: true
  pet_id: bunny
  name: Bunny
  entity: e@rabbit[age=baby]
  description: What a cute playful bunny!
  item_icon: i@carrot_item
  actions:
    on spawn:
    - narrate "Squeak!" format:dpets_format2
    - playsound sound:ENTITY_RABBIT_AMBIENT <def[pet].location>
    on left click:
    - playsound sound:ENTITY_RABBIT_hurt <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on right click:
    - playsound sound:ENTITY_RABBIT_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on call:
    - narrate "Squeak!" format:dpets_format2
    on happy:
    - playsound sound:ENTITY_rabbit_ambient <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on sad:
    - playsound sound:ENTITY_rabbit_hurt <def[pet].location>
    - playeffect effect:flame <def[pet].location> qty:5 offset:0.5 visibility:50
  abilities:
    hop:
      item_icon: i@slime_block
      name: hop
      description: Make your bunny jump!
      global_cooldown: 12s
      energy: 5
      script:
      - repeat 10:
        - define velocity l@<util.random.decimal[-0.5].to[0.3]>,0.5,<util.random.decimal[-0.5].to[0.5]>
        - look <def[pet]> <def[pet].location.add[<def[velocity]>]>
        - adjust <def[pet]> velocity:<def[velocity]>
        - playsound sound:ENTITY_RABBIT_hurt <def[pet].location>
        - playsound sound:ENTITY_RABBIT_JUMP <def[pet].location> pitch:1.3
        - repeat 10:
          - playeffect effect:flame <def[pet].location> qty:1 offset:0 visibility:50
          - wait 1t
    burrow:
      item_icon: i@wood_spade
      name: Burrow
      description: Let your bunny dig a burrow!
      global_cooldown: 12s
      energy: 5
      script:
      - define location <def[pet].location.below>
      - repeat 20:
        - playsound sound:BLOCK_grass_HIT <def[location]>
        - playsound sound:BLOCK_sand_HIT <def[location]> pitch:0.5
        - playeffect effect:blockcrack_2 qty:15 visibility:40 offset:0.1 <def[location]>
        - wait 2t
      - invisible <def[pet]> state:true
      - repeat 10:
        - define location <def[pet].location.find.surface_blocks.within[4].random.above||<def[pet].location>>
        - walk <def[pet]> <def[location]> speed:1
        - repeat 5:
          - playsound sound:BLOCK_sand_HIT <def[pet].location> pitch:0.5
          - playeffect effect:blockcrack_2 qty:15 visibility:40 offset:0.1 <def[pet].location.below>
          - wait 2t
      - invisible <def[pet]> state:false
      - playeffect effect:blockcrack_2 <def[pet].location> qty:25 offset:0.5 visibility:50
      - playsound sound:ENTITY_DONKEY_CHEST <def[pet].location> pitch:1
    grow:
      item_icon: i@potion
      name: Grow
      global_cooldown: 3s
      description: Make your bunny bigger!
      energy: 15
      script:
      - playsound sound:ENTITY_rabbit_hurt <def[pet].location>
      - playeffect effect:CLOUD <def[pet].location> qty:100 offset:0.6 visibility:50
      - wait 1t
      - adjust <def[pet]> age:adult
    shrink:
      item_icon: i@potion
      name: Shrink
      global_cooldown: 3s
      description: Make your bunny smaller!
      energy: 15
      script:
      - playsound sound:ENTITY_rabbit_hurt <def[pet].location>
      - playeffect effect:CLOUD <def[pet].location> qty:100 offset:0.6 visibility:50
      - wait 1t
      - adjust <def[pet]> age:baby
#####################
# default bat
#####################
dpets_bat:
  type: yaml data
  is_dpet: true
  pet_id: bat
  name: Bat
  entity: e@bat
  description: A flying mouse!
  item_icon: i@rabbit_hide
  actions:
    on spawn:
    - narrate "Eep!" format:dpets_format2
    - playsound sound:ENTITY_BAT_AMBIENT <def[pet].location>
    on left click:
    - playsound sound:ENTITY_BAT_TAKEOFF <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on right click:
    - playsound sound:ENTITY_BAT_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on call:
    - narrate "Eep!" format:dpets_format2
    on happy:
    - playsound sound:ENTITY_BAT_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on sad:
    - playsound sound:ENTITY_BAT_hurt <def[pet].location>
    - playeffect effect:flame <def[pet].location> qty:5 offset:0.5 visibility:50
  abilities:
    flutter:
      item_icon: i@elytra
      name: Flutter
      description: Make your bat fly around!
      global_cooldown: 10s
      energy: 5
      script:
      - repeat 10:
        - define velocity l@<util.random.decimal[-0.5].to[0.5]>,<util.random.decimal[0.2].to[2]>,<util.random.decimal[-0.5].to[0.5]>
        - look <def[pet]> <def[pet].location.add[<def[velocity]>]>
        - adjust <def[pet]> velocity:<def[velocity]>
        - repeat 10:
          - playeffect effect:town_aura <def[pet].location.sub[0,0.5,0]> qty:5 offset:0.05 visibility:50
          - playeffect effect:flame <def[pet].location.sub[0,0.5,0]> qty:5 offset:0.05 visibility:50
          - wait 1t
    recon:
      item_icon: i@eye_of_ender
      name: Recon
      description: Have your bat look around!
      global_cooldown: 15s
      energy: 5
      script:
      - define location <def[pet].location.add[0,10,0]>
      - adjust <def[pet]> velocity:l@0,3,0
      - repeat 5:
        - playeffect effect:town_aura <def[pet].location.sub[0,0.5,0]> qty:5 offset:0.05 visibility:50
        - playeffect effect:flame <def[pet].location.sub[0,0.5,0]> qty:5 offset:0.05 visibility:50
        - wait 1t
      - repeat 40:
        - teleport <def[pet]> <def[location]>
        - playeffect effect:cloud <def[pet].location.sub[0,0.5,0]> qty:5 offset:0.5 visibility:50
        - wait 5t
      - async:
        - foreach <def[location].find.entities.within[25].exclude[<def[pet]>].random[5]||li@>:
          - teleport <def[pet]> <def[location]>
          - playeffect effect:cloud <def[pet].location.sub[0,0.5,0]> qty:5 offset:0.5 visibility:50
          - define start <def[pet].location.face[<def[value].location>]>
          - define dir <def[start].direction.vector>
          - define width 0.5
          - define count 5
          - define ring 16
          - repeat <def[count]>:
            - define start <def[start].add[<def[dir].mul[2]>]>
            - repeat <def[ring].mul[<def[value]>].as_int>:
              - playeffect effect:red_dust <def[start].add[<location[<def[value].cos.mul[<def[width]>]>,0,<def[value].sin.mul[<def[width]>]>].rotate_around_x[<def[start].pitch.add[90].to_radians>].rotate_around_y[<def[start].yaw.mul[-1].to_radians>]>]> offset:<co@255,255,255.to_particle_offset> qty:0 data:1 visibility:100
            - define width <def[width].mul[1.5]>
            - teleport <def[pet]> <def[location]>
            - wait 1t
        - wait 5t
      - repeat 10:
        - teleport <def[pet]> <def[location]>
        - playeffect effect:cloud <def[pet].location.sub[0,0.5,0]> qty:5 offset:0.5 visibility:50
        - wait 5t
    point:
      item_icon: i@compass
      name: Point
      description: Point where your bat should fly to!
      global_cooldown: 15s
      energy: 10
      script:
      - wait 10t
      - repeat 200:
        - teleport <def[pet]> <player.eye_location.precise_cursor_on[10]||<player.eye_location.add[<player.eye_location.direction.vector.mul[10]>]||<player.location>>>
        - playeffect effect:town_aura <def[pet].location.sub[0,0.5,0]> qty:5 offset:0.05 visibility:50
        - playeffect effect:flame <def[pet].location.sub[0,0.5,0]> qty:5 offset:0.05 visibility:50
        - wait 1t
    orbit:
      item_icon: i@shield
      name: Orbit
      description: Your bat will orbit you!
      global_cooldown: 18s
      energy: 10
      script:
      - define locations li@
      - define interval <util.tau.div[20]>
      - repeat 20:
        - define locations <def[locations].include[<def[value].mul[<def[interval]>].cos>,0,<def[value].mul[<def[interval]>].sin>]>
      - repeat 15:
        - foreach <def[locations]>:
          - define location <player.location.add[<def[value]>]>
          - playeffect effect:flame <def[location]> qty:1 offset:0.05 visibility:50
          - teleport <def[pet]> <def[location].above>
          - wait 1t

#####################
# default polar bear
#####################
dpets_polar_bear:
  type: yaml data
  is_dpet: true
  pet_id: polar_bear
  name: Polar Bear
  entity: e@polar_bear[age=baby]
  item_icon: i@ice
  description: A polar bear all the way from Antartica!
  actions:
    on spawn:
    - narrate "Rawrr!" format:dpets_format2
    - playsound sound:ENTITY_POLAR_BEAR_WARNING <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on left click:
    - playsound sound:ENTITY_POLAR_BEAR_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on right click:
    - playsound sound:ENTITY_POLAR_BEAR_BABY_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on call:
    - playsound sound:ENTITY_POLAR_BEAR_WARNING <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on happy:
    - playsound sound:ENTITY_POLAR_BEAR_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on sad:
    - playsound sound:ENTITY_POLAR_BEAR_HURT <def[pet].location>
    - playeffect effect:flame <def[pet].location> qty:5 offset:0.5 visibility:50
  abilities:
    roar:
      item_icon: i@stone_sword
      name: Roar
      global_cooldown: 2s
      description: Hear me roar!
      energy: 3
      script:
      - narrate "Grrrrr!" format:dpets_format2
      - playsound sound:ENTITY_POLAR_BEAR_WARNING <def[pet].location>
      - playsound sound:ENTITY_POLAR_BEAR_HURT <def[pet].location>
      - playsound sound:ENTITY_POLAR_BEAR_death <def[pet].location>
      - playeffect effect:flame <def[pet].location> qty:5 offset:0.5 visibility:50
    grow:
      item_icon: i@potion
      name: Grow
      global_cooldown: 3s
      description: Make your polar bear bigger!
      energy: 15
      script:
      - playsound sound:ENTITY_POLAR_BEAR_WARNING <def[pet].location>
      - playsound sound:ENTITY_POLAR_BEAR_HURT <def[pet].location>
      - playsound sound:ENTITY_POLAR_BEAR_death <def[pet].location>
      - playeffect effect:CLOUD <def[pet].location> qty:100 offset:0.6 visibility:50
      - wait 1t
      - adjust <def[pet]> age:adult
    shrink:
      item_icon: i@potion
      name: Shrink
      global_cooldown: 3s
      description: Make your polar bear smaller!
      energy: 15
      script:
      - playsound sound:ENTITY_POLAR_BEAR_WARNING <def[pet].location>
      - playsound sound:ENTITY_POLAR_BEAR_HURT <def[pet].location>
      - playsound sound:ENTITY_POLAR_BEAR_death <def[pet].location>
      - playeffect effect:CLOUD <def[pet].location> qty:100 offset:0.6 visibility:50
      - wait 1t
      - adjust <def[pet]> age:baby
    snow:
      item_icon: i@snow_ball
      name: Snow
      global_cooldown: 11s
      description: Make your polar bear feel at home!
      energy: -2
      script:
      - playsound sound:ENTITY_MINECART_inside pitch:1.5 <def[pet].location> volume:0.2
      - define cloudblob <def[pet].location.add[0,5,0].find.blocks.within[3].filter[y.is[==].to[<def[pet].location.add[0,5,0].y>]].parse[center]>
      - define snowcenter <def[pet].location.add[0,3,0]>
      - define snowcenter2 <def[pet].location.add[0,6,0]>
      - showfake m@snow <def[snowcenter].find.surface_blocks.within[5].parse[above].random[10]> duration:10s players:<def[pet].location.find.players.within[50]>
      - repeat 40:
        - playeffect effect:cloud <def[cloudblob]> qty:5 offset:0.4 visibility:100
        - playeffect effect:SNOW_SHOVEL <def[snowcenter]> qty:25 offset:1 visibility:100
        - playeffect effect:SNOW_SHOVEL <def[snowcenter2]> qty:25 offset:1 visibility:100
        - if <def[value].mod[13]> == 0 playsound sound:ENTITY_MINECART_inside pitch:1.5 <def[pet].location> volume:0.2
        - wait 5t
#####################
# default blaze
#####################
dpets_blaze:
  type: yaml data
  is_dpet: true
  pet_id: blaze
  name: blaze
  entity: e@blaze[silent=true]
  description: A firy blaze!
  item_icon: i@human_skull[skull_skin=4c38ed11-596a-4fd4-ab1d-26f386c1cbac|eyJ0aW1lc3RhbXAiOjE0MzA0NTE4MzM3MDcsInByb2ZpbGVJZCI6IjRjMzhlZDExNTk2YTRmZDRhYjFkMjZmMzg2YzFjYmFjIiwicHJvZmlsZU5hbWUiOiJNSEZfQmxhemUiLCJpc1B1YmxpYyI6dHJ1ZSwidGV4dHVyZXMiOnsiU0tJTiI6eyJ1cmwiOiJodHRwOi8vdGV4dHVyZXMubWluZWNyYWZ0Lm5ldC90ZXh0dXJlL2I3OGVmMmU0Y2YyYzQxYTJkMTRiZmRlOWNhZmYxMDIxOWY1YjFiZjViMzVhNDllYjUxYzY0Njc4ODJjYjVmMCJ9fX0=]
  actions:
    on spawn:
    - playsound sound:ENTITY_BLAZE_SHOOT <def[pet].location>
    - playeffect effect:smoke <def[pet].location> qty:5 offset:0.5 visibility:50
    - playeffect effect:flame <def[pet].location> qty:5 offset:0.5 visibility:50
    on left click:
    - playsound sound:ENTITY_BLAZE_BURN <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on right click:
    - playsound sound:ENTITY_BLAZE_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on call:
    - playsound sound:ENTITY_BLAZE_HURT <def[pet].location>
    - playeffect effect:smoke <def[pet].location> qty:5 offset:0.5 visibility:50
    - playeffect effect:flame <def[pet].location> qty:5 offset:0.5 visibility:50
    on happy:
    - playsound sound:ENTITY_BLAZE_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on sad:
    - playsound sound:ENTITY_BLAZE_HURT <def[pet].location>
    - playeffect effect:flame <def[pet].location> qty:5 offset:0.5 visibility:50
  abilities:
    Shoot:
      item_icon: i@fireball
      name: Shoot
      description: Make your blaze shoot!
      global_cooldown: 5s
      energy: 10
      script:
        - async:
          - define target <pl.target||null>
          - if <def[target]> == <def[pet]> {
            - define target <player.location.cursor_on[30]>
            } else {
            - define target <def[target].location||<player.location.cursor_on[30]>>
            }
          - repeat 3:
            - define start <def[pet].location>
            - define target <def[target].add[<util.random.int[-1].to[1]>,<util.random.int[-1].to[1]>,<util.random.int[-1].to[1]>]>
            - look <def[pet]> <def[target]>
            - define list <def[start].points_between[<def[target]>].distance[0.5]>
            - foreach <def[list]>:
              - playeffect <def[value]> effect:flame qty:5 offset:0.05 visibility:50
              - if <def[loop_index].mod[5]> == 0 {
                - wait 1t
                - playsound sound:ENTITY_BLAZE_SHOOT <def[value]>
                }
            - wait 5t
    buzz:
      item_icon: i@blaze_rod
      name: Buzz
      description: Make your blaze buzz around!
      global_cooldown: 5s
      energy: 10
      script:
      - repeat 10:
        - define target <def[pet].location.add[<util.random.int[-4].to[4]>,<util.random.int[0].to[4]>,<util.random.int[-4].to[4]>]>
        - define trail <def[pet].location.points_between[<def[target]>]>
        - playeffect effect:flame qty:2 offset:0.05 <def[trail]> visibility:100
        - teleport <def[pet]> <def[target]>
        - playsound sound:ENTITY_BLAZE_SHOOT <def[target]>
        - wait 10t
    ignite:
      item_icon: i@flint_and_steel
      name: Ignite
      description: Set the world on fire!
      global_cooldown: 5s
      energy: 15
      script:
      - repeat 4:
        - define cuboid cu@<def[pet].location.add[<def[value]>,0,<def[value]>]>|<def[pet].location.add[-<def[value]>,0,-<def[value]>]>
        - showfake m@fire <def[cuboid].blocks> duration:5s players:<def[pet].location.find.players.within[50]>
        - playsound sound:ENTITY_BLAZE_SHOOT <def[pet].location>
        - wait 10t
      
#####################
# default cave_spider
#####################
# dpets_cave_spider:
  # type: yaml data
  # is_dpet: true
  # pet_id: cave_spider
  # name: cave spider
  # entity: e@cave_spider
  # item_icon: i@human_skull[skull_skin=cab28771-f0cd-4fe7-b129-02c69eba79a5|eyJ0aW1lc3RhbXAiOjE0MzA0NTIyMjc5NTksInByb2ZpbGVJZCI6ImNhYjI4NzcxZjBjZDRmZTdiMTI5MDJjNjllYmE3OWE1IiwicHJvZmlsZU5hbWUiOiJNSEZfQ2F2ZVNwaWRlciIsImlzUHVibGljIjp0cnVlLCJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNDE2NDVkZmQ3N2QwOTkyMzEwN2IzNDk2ZTk0ZWViNWMzMDMyOWY5N2VmYzk2ZWQ3NmUyMjZlOTgyMjQifX19]
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default chicken
#####################
dpets_chicken:
  type: yaml data
  is_dpet: true
  pet_id: chicken
  name: chicken
  entity: e@chicken
  item_icon: i@human_skull[skull_skin=92deafa9-4307-42d9-b003-88601598d6c0|eyJ0aW1lc3RhbXAiOjE0MzA0NTIzMjcxMjksInByb2ZpbGVJZCI6IjkyZGVhZmE5NDMwNzQyZDliMDAzODg2MDE1OThkNmMwIiwicHJvZmlsZU5hbWUiOiJNSEZfQ2hpY2tlbiIsImlzUHVibGljIjp0cnVlLCJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMTYzODQ2OWE1OTljZWVmNzIwNzUzNzYwMzI0OGE5YWIxMWZmNTkxZmQzNzhiZWE0NzM1YjM0NmE3ZmFlODkzIn19fQ==]
  description: Bwuk!
  actions:
    on spawn:
    - narrate "Bwuk!" format:dpets_format2
    - playsound sound:ENTITY_CHICKEN_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on left click:
    - playsound sound:ENTITY_CHICKEN_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on right click:
    - playsound sound:ENTITY_CHICKEN_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on call:
    - playsound sound:ENTITY_CHICKEN_AMBIENT <def[pet].location>
    - narrate "Bwuk!" format:dpets_format2
    on happy:
    - playsound sound:ENTITY_CHICKEN_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on sad:
    - playsound sound:ENTITY_CHICKEN_HURT <def[pet].location>
    - playeffect effect:flame <def[pet].location> qty:5 offset:0.5 visibility:50
  abilities:
    eggs:
      item_icon: i@egg
      name: Eggs
      description: Make it rain eggs!
      global_cooldown: 10s
      energy: 15
      script:
      - define locations <def[pet].location.add[0,10,0].find.blocks.within[3]>
      - repeat 50:
        - define location <def[locations].random>
        - displayitem i@egg <def[location]> duration:10s
        - playsound sound:ENTITY_CHICKEN_egg <def[location]>
        - playeffect effect:cloud <def[location]> offset:1 qty:50 visibility:50
        - wait 2t
        - if <def[value].mod[5]> == 0 playsound sound:ENTITY_CHICKEN_ambient <def[pet].location> pitch:<util.random.decimal[1].to[1.3].round_to[1]>
    grow:
      item_icon: i@potion
      name: Grow
      global_cooldown: 3s
      description: Make your cock bigger!
      energy: 15
      script:
      - playsound sound:ENTITY_CHICKEN_hurt <def[pet].location>
      - playsound sound:ENTITY_CHICKEN_ambient <def[pet].location>
      - playsound sound:ENTITY_CHICKEN_egg <def[pet].location>
      - playeffect effect:CLOUD <def[pet].location> qty:100 offset:0.6 visibility:50
      - wait 1t
      - adjust <def[pet]> age:adult
    shrink:
      item_icon: i@potion
      name: Shrink
      global_cooldown: 3s
      description: Make your chicken smaller!
      energy: 15
      script:
      - playsound sound:ENTITY_CHICKEN_hurt <def[pet].location>
      - playsound sound:ENTITY_CHICKEN_ambient <def[pet].location>
      - playsound sound:ENTITY_CHICKEN_egg <def[pet].location>
      - playeffect effect:CLOUD <def[pet].location> qty:100 offset:0.6 visibility:50
      - wait 1t
      - adjust <def[pet]> age:baby
#####################
# default cow
#####################
# dpets_cow:
  # type: yaml data
  # is_dpet: true
  # pet_id: cow
  # name: cow
  # entity: e@cow
  # item_icon: i@human_skull[skull_skin=f159b274-c22e-4340-b7c1-52abde147713|eyJ0aW1lc3RhbXAiOjE0MzA0NTI2NTMyMDcsInByb2ZpbGVJZCI6ImYxNTliMjc0YzIyZTQzNDBiN2MxNTJhYmRlMTQ3NzEzIiwicHJvZmlsZU5hbWUiOiJNSEZfQ293IiwiaXNQdWJsaWMiOnRydWUsInRleHR1cmVzIjp7IlNLSU4iOnsidXJsIjoiaHR0cDovL3RleHR1cmVzLm1pbmVjcmFmdC5uZXQvdGV4dHVyZS81ZDZjNmVkYTk0MmY3ZjVmNzFjMzE2MWM3MzA2ZjRhZWQzMDdkODI4OTVmOWQyYjA3YWI0NTI1NzE4ZWRjNSJ9fX0=]
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default creeper
#####################
# dpets_creeper:
  # type: yaml data
  # is_dpet: true
  # pet_id: creeper
  # name: creeper
  # entity: e@creeper
  # item_icon: i@creeper_skull
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default enderman
#####################
# dpets_enderman:
  # type: yaml data
  # is_dpet: true
  # pet_id: enderman
  # name: enderman
  # entity: e@enderman
  # item_icon: i@human_skull[skull_skin=40ffb372-12f6-4678-b3f2-2176bf56dd4b|eyJ0aW1lc3RhbXAiOjE0MzA0NTI2OTE5MzMsInByb2ZpbGVJZCI6IjQwZmZiMzcyMTJmNjQ2NzhiM2YyMjE3NmJmNTZkZDRiIiwicHJvZmlsZU5hbWUiOiJNSEZfRW5kZXJtYW4iLCJpc1B1YmxpYyI6dHJ1ZSwidGV4dHVyZXMiOnsiU0tJTiI6eyJ1cmwiOiJodHRwOi8vdGV4dHVyZXMubWluZWNyYWZ0Lm5ldC90ZXh0dXJlLzdhNTliYjBhN2EzMjk2NWIzZDkwZDhlYWZhODk5ZDE4MzVmNDI0NTA5ZWFkZDRlNmI3MDlhZGE1MGI5Y2YifX19]
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default endermite
#####################
# dpets_endermite:
  # type: yaml data
  # is_dpet: true
  # pet_id: endermite
  # name: endermite
  # entity: e@endermite
  # item_icon: i@ender_pearl
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default giant
#####################
# dpets_giant:
  # type: yaml data
  # is_dpet: true
  # pet_id: giant
  # name: giant
  # entity: e@giant
  # item_icon: i@zombie_skull
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default horse
#####################
# dpets_horse:
  # type: yaml data
  # is_dpet: true
  # pet_id: horse
  # name: horse
  # entity: e@horse
  # item_icon: i@wheat
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default iron_golem
#####################
# dpets_iron_golem:
  # type: yaml data
  # is_dpet: true
  # pet_id: iron_golem
  # name: iron golem
  # entity: e@iron_golem
  # item_icon: i@human_skull[skull_skin=757f90b2-2344-4b8d-8dac-824232e2cece|eyJ0aW1lc3RhbXAiOjE0MzA0NTMwMTAxNDEsInByb2ZpbGVJZCI6Ijc1N2Y5MGIyMjM0NDRiOGQ4ZGFjODI0MjMyZTJjZWNlIiwicHJvZmlsZU5hbWUiOiJNSEZfR29sZW0iLCJpc1B1YmxpYyI6dHJ1ZSwidGV4dHVyZXMiOnsiU0tJTiI6eyJ1cmwiOiJodHRwOi8vdGV4dHVyZXMubWluZWNyYWZ0Lm5ldC90ZXh0dXJlLzg5MDkxZDc5ZWEwZjU5ZWY3ZWY5NGQ3YmJhNmU1ZjE3ZjJmN2Q0NTcyYzQ0ZjkwZjc2YzQ4MTlhNzE0In19fQ==]
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default magma_cube
#####################
# dpets_magma_cube:
  # type: yaml data
  # is_dpet: true
  # pet_id: magma_cube
  # name: magma cube
  # entity: e@magma_cube
  # item_icon: i@human_skull[skull_skin=0972bdd1-4b86-49fb-9ecc-a353f8491a51|eyJ0aW1lc3RhbXAiOjE0MzA0NTMwNjM5MDMsInByb2ZpbGVJZCI6IjA5NzJiZGQxNGI4NjQ5ZmI5ZWNjYTM1M2Y4NDkxYTUxIiwicHJvZmlsZU5hbWUiOiJNSEZfTGF2YVNsaW1lIiwiaXNQdWJsaWMiOnRydWUsInRleHR1cmVzIjp7IlNLSU4iOnsidXJsIjoiaHR0cDovL3RleHR1cmVzLm1pbmVjcmFmdC5uZXQvdGV4dHVyZS8zODk1N2Q1MDIzYzkzN2M0YzQxYWEyNDEyZDQzNDEwYmRhMjNjZjc5YTlmNmFiMzZiNzZmZWYyZDdjNDI5In19fQ==]
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default pig
#####################
# dpets_pig:
  # type: yaml data
  # is_dpet: true
  # pet_id: pig
  # name: pig
  # entity: e@pig
  # item_icon: i@human_skull[skull_skin=8b57078b-f1bd-45df-83c4-d88d16768fbe|eyJ0aW1lc3RhbXAiOjE0MzA0NTMyODQ0MDMsInByb2ZpbGVJZCI6IjhiNTcwNzhiZjFiZDQ1ZGY4M2M0ZDg4ZDE2NzY4ZmJlIiwicHJvZmlsZU5hbWUiOiJNSEZfUGlnIiwiaXNQdWJsaWMiOnRydWUsInRleHR1cmVzIjp7IlNLSU4iOnsidXJsIjoiaHR0cDovL3RleHR1cmVzLm1pbmVjcmFmdC5uZXQvdGV4dHVyZS82MjE2NjhlZjdjYjc5ZGQ5YzIyY2UzZDFmM2Y0Y2I2ZTI1NTk4OTNiNmRmNGE0Njk1MTRlNjY3YzE2YWE0In19fQ==]
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default pig_zombie
#####################
# dpets_pig_zombie:
  # type: yaml data
  # is_dpet: true
  # pet_id: pig_zombie
  # name: pig zombie
  # entity: e@pig_zombie
  # item_icon: i@human_skull[skull_skin=18a2bb50-334a-4084-9184-2c380251a24b|eyJ0aW1lc3RhbXAiOjE0MzA0NTA3Nzg2MTQsInByb2ZpbGVJZCI6IjE4YTJiYjUwMzM0YTQwODQ5MTg0MmMzODAyNTFhMjRiIiwicHJvZmlsZU5hbWUiOiJNSEZfUGlnWm9tYmllIiwiaXNQdWJsaWMiOnRydWUsInRleHR1cmVzIjp7IlNLSU4iOnsidXJsIjoiaHR0cDovL3RleHR1cmVzLm1pbmVjcmFmdC5uZXQvdGV4dHVyZS83NGU5YzZlOTg1ODJmZmQ4ZmY4ZmViMzMyMmNkMTg0OWM0M2ZiMTZiMTU4YWJiMTFjYTdiNDJlZGE3NzQzZWIifX19]
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default silverfish
#####################
# dpets_silverfish:
  # type: yaml data
  # is_dpet: true
  # pet_id: silverfish
  # name: silverfish
  # entity: e@silverfish
  # item_icon: i@stone
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default skeleton
#####################
# dpets_skeleton:
  # type: yaml data
  # is_dpet: true
  # pet_id: skeleton
  # name: skeleton
  # entity: e@skeleton
  # item_icon: i@skeleton_skull
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default slime
#####################
# dpets_slime:
  # type: yaml data
  # is_dpet: true
  # pet_id: slime
  # name: slime
  # entity: e@slime
  # item_icon: i@slime_ball
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default snowman
#####################
# dpets_snowman:
  # type: yaml data
  # is_dpet: true
  # pet_id: snowman
  # name: snowman
  # entity: e@snowman
  # item_icon: i@snow_ball
  # actions:
    # on spawn:
    # - narrate "spawn" format:dpets_format2
    # on left click:
    # - narrate "left click" format:dpets_format2
    # on right click:
    # - narrate "right click" format:dpets_format2
  # abilities:
    # placeholder:
      # item_icon: i@diamond
      # name: placeholder
      # script:
      # - narrate "placeholder ability" format:dpets_format2
#####################
# default spider
#####################
dpets_spider:
  type: yaml data
  is_dpet: true
  pet_id: spider
  name: Spider
  entity: e@spider
  description: A cute fuzzy nope!
  item_icon: i@human_skull[skull_skin=cab28771-f0cd-4fe7-b129-02c69eba79a5|eyJ0aW1lc3RhbXAiOjE0MzA0NTIyMjc5NTksInByb2ZpbGVJZCI6ImNhYjI4NzcxZjBjZDRmZTdiMTI5MDJjNjllYmE3OWE1IiwicHJvZmlsZU5hbWUiOiJNSEZfQ2F2ZVNwaWRlciIsImlzUHVibGljIjp0cnVlLCJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNDE2NDVkZmQ3N2QwOTkyMzEwN2IzNDk2ZTk0ZWViNWMzMDMyOWY5N2VmYzk2ZWQ3NmUyMjZlOTgyMjQifX19]
  actions:
    on spawn:
    - narrate "Skrreeee!" format:dpets_format2
    - playsound sound:ENTITY_SPIDER_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on left click:
    - playsound sound:ENTITY_SPIDER_STEP <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on right click:
    - playsound sound:ENTITY_SPIDER_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on call:
    - playsound sound:ENTITY_SPIDER_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on happy:
    - playsound sound:ENTITY_SPIDER_AMBIENT <def[pet].location>
    - playeffect effect:heart <def[pet].location> qty:5 offset:0.5 visibility:50
    on sad:
    - playsound sound:ENTITY_SPIDER_hurt <def[pet].location>
    - playeffect effect:flame <def[pet].location> qty:5 offset:0.5 visibility:50
  abilities:
    web:
      item_icon: i@web
      name: Web
      description: Turn your spider into a web developer!
      global_cooldown: 5s
      energy: 10
      script:
      - define location <def[pet].location>
      - define players <def[location].world.players>
      - playsound sound:ENTITY_SPIDER_AMBIENT <def[pet].location>
      - repeat 20:
        - define newloc <def[location].add[<util.random.int[-5].to[5]>,0,<util.random.int[-5].to[5]>]>
        - showfake m@web <def[newloc]> duration:5s players:<def[players]>
        - playeffect effect:cloud <def[newloc]> visibility:50 offset:1.5 qty:25
        - playsound sound:BLOCK_STONE_BREAK <def[newloc]>
        - wait 1t
      - playsound sound:ENTITY_SPIDER_AMBIENT <def[pet].location>
    shoot:
      item_icon: i@string
      name: Shoot
      description: Make your spider shoot a string of web!
      global_cooldown: 5s
      energy: 15
      script:
      - define location <def[pet].location>
      - define target <pl.target||null>
      - if <def[target]> == <def[pet]> {
        - define target <player.location.cursor_on[30]>
        } else {
        - define target <def[target].location||<player.location.cursor_on[30]>>
        }
      - define line <def[location].points_between[<def[target].above>].distance[1]||li@>
      - define players <def[location].world.players>
      - foreach <def[line]>:
        - if <def[value].material.is_occluding||false> foreach stop
        - showfake m@web <def[value]> duration:2s players:<def[players]>
        - playeffect effect:cloud <def[value].below> visibility:50 offset:0.7 qty:25
        - playsound sound:BLOCK_STONE_BREAK <def[value]>
        - wait 1t
      - define location <def[value]>
      - repeat 10:
        - showfake m@web <def[location].add[<util.random.int[-2].to[2]>,<util.random.int[-2].to[2]>,<util.random.int[-2].to[2]>]> duration:3s players:<def[players]>